<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Karan&#39;s DevLog</title>
    <link>https://krnxmid.github.io/posts/</link>
    <description>Recent content in Posts on Karan&#39;s DevLog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://krnxmid.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Welcome to My Blog Page ðŸ‘¾ðŸŽ‰</title>
      <link>https://krnxmid.github.io/posts/welcome-to-my-blog-page-/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://krnxmid.github.io/posts/welcome-to-my-blog-page-/</guid>
      <description>&lt;p&gt;Hello everyone!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m &lt;strong&gt;Karanveer Singh&lt;/strong&gt;, and welcome to my DevLog! This is my space where I share my journey through the fascinating world of IT, cybersecurity, ethical hacking, Linux, and much more.&lt;/p&gt;
&lt;p&gt;Ever since I first tinkered with computers, I&amp;rsquo;ve been captivated by how technology worksâ€”from building systems from scratch to understanding the intricate details of digital security. My passion for cybersecurity has driven me to explore ethical hacking and system administration, and now I want to bring you along on that journey.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Detailed Guide on Aircrack-ng Suite</title>
      <link>https://krnxmid.github.io/posts/detailed-guide-on-aircrack-ng-suite/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://krnxmid.github.io/posts/detailed-guide-on-aircrack-ng-suite/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; loading=&#34;lazy&#34; src=&#34;https://krnxmid.github.io/images/Pasted%20image%2020250217215645.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Aircrack-ng&lt;/strong&gt; is a powerful suite of tools designed for auditing wireless networks. Itâ€™s widely used for testing the security of Wi-Fi networks by recovering WEP and WPA/WPA2 keys from captured packets. This guide covers everything from installation to executing attacks for educational and authorized penetration testing purposes.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#enabling-monitor-mode&#34;&gt;Enabling Monitor Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#packet-capturing-with-airodump-ng&#34;&gt;Packet Capturing with Airodump-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#deauthentication-attacks-with-aireplay-ng&#34;&gt;Deauthentication Attacks with Aireplay-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cracking-wpawpa2-handshakes-with-aircrack-ng&#34;&gt;Cracking WPA/WPA2 Handshakes with Aircrack-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cracking-wep-networks&#34;&gt;Cracking WEP Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional-tools-and-techniques&#34;&gt;Additional Tools and Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#best-practices--troubleshooting&#34;&gt;Best Practices &amp;amp; Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Operating System:&lt;/strong&gt; A Linux distribution (Kali Linux is highly recommended).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hardware:&lt;/strong&gt; A wireless adapter that supports monitor mode and packet injection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Knowledge:&lt;/strong&gt; Familiarity with Linux terminal commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissions:&lt;/strong&gt; Legal authorization to test the target network.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;on-kali-linux-pre-installed&#34;&gt;On Kali Linux (Pre-installed)&lt;/h3&gt;
&lt;p&gt;Kali Linux comes with Aircrack-ng pre-installed. To update or reinstall:&lt;/p&gt;</description>
    </item>
    <item>
      <title>GPT-4 API Key For Free</title>
      <link>https://krnxmid.github.io/posts/gpt-4-api-key-for-free/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://krnxmid.github.io/posts/gpt-4-api-key-for-free/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; loading=&#34;lazy&#34; src=&#34;https://krnxmid.github.io/images/Pasted%20image%2020250217220956.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This guide explains how to obtain a free API key for OpenAI&amp;rsquo;s GPT-4 through GitHub Marketplace. This allows developers to access GPT-4 for free within the limitations set by GitHub.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;steps-to-get-the-api-key&#34;&gt;Steps to Get the API Key&lt;/h2&gt;
&lt;h3 id=&#34;1-sign-in-to-github&#34;&gt;1. &lt;strong&gt;Sign in to GitHub&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Ensure you have a GitHub account. If you donâ€™t have one, create an account at &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;2-access-github-marketplace&#34;&gt;2. &lt;strong&gt;Access GitHub Marketplace&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;a href=&#34;https://github.com/marketplace&#34;&gt;GitHub Marketplace&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Search for &amp;ldquo;GPT-4 API&amp;rdquo; or &amp;ldquo;OpenAI API.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Click on the model you want&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-generate-a-api-key&#34;&gt;3. &lt;strong&gt;Generate a API Key&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on GPT-4&lt;/li&gt;
&lt;li&gt;On the right side click on &lt;code&gt;Get API Key&lt;/code&gt; to get the api key&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-generate-a-github-token&#34;&gt;4. &lt;strong&gt;Generate a github token&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;After clicking on the option, click on &lt;code&gt;Get Developer Key&lt;/code&gt; next to the github option.&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Generate New Token&lt;/code&gt; and then click on the &lt;code&gt;Generate New Token (Classic)&lt;/code&gt; option.&lt;/li&gt;
&lt;li&gt;Just specify a Note for the token and then skip rest of the options&lt;/li&gt;
&lt;li&gt;Finally Click on &lt;code&gt;Generate Token&lt;/code&gt; to generate it!&lt;/li&gt;
&lt;li&gt;Your API key will be displayed and then just copy it!&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;usage-of-api-key&#34;&gt;Usage of API Key&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Once you have the API key, you can use it in your projects or use the given example code with python&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;limitations--considerations&#34;&gt;Limitations &amp;amp; Considerations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Usage Limits&lt;/strong&gt;: Free tiers may have request limits (e.g., X requests per minute) you can check the official github documentation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Terms &amp;amp; Conditions&lt;/strong&gt;: Always check GitHub Marketplace terms to ensure compliance.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;By following these steps, you can access GPT-4 via GitHub Marketplace without any cost, within the provided limits. Always keep an eye on changes to the free tier offerings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IoT Project</title>
      <link>https://krnxmid.github.io/posts/iot-project/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://krnxmid.github.io/posts/iot-project/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This project integrates a Programmable Logic Controller (PLC) with ThingsBoard, an open-source IoT platform, to monitor and control industrial processes. The project leverages Python for automation, the ThingsBoard Rule Engine for real-time data processing, and a combination of sensors and actuators for industrial applications.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Establish a reliable connection between a PLC and ThingsBoard.&lt;/li&gt;
&lt;li&gt;Use ThingsBoard dashboards for real-time monitoring and control.&lt;/li&gt;
&lt;li&gt;Implement automation using Python and the ThingsBoard Rule Engine.&lt;/li&gt;
&lt;li&gt;Enable remote accessibility and data visualization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;components-used&#34;&gt;Components Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PLC&lt;/strong&gt;: For industrial control logic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ThingsBoard&lt;/strong&gt;: IoT platform for data visualization and processing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: For automation and scripting.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Networking&lt;/strong&gt;: MQTT or HTTP for data transmission.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation-steps&#34;&gt;Implementation Steps&lt;/h2&gt;
&lt;h3 id=&#34;1-setting-up-the-plc&#34;&gt;1. Setting Up the PLC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Configure the PLC with necessary input/output modules.&lt;/li&gt;
&lt;li&gt;Define logic using ladder programming or structured text.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-connecting-plc-to-thingsboard&#34;&gt;2. Connecting PLC to ThingsBoard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use MQTT or HTTP API to send data from PLC to ThingsBoard.&lt;/li&gt;
&lt;li&gt;Configure ThingsBoard device and telemetry settings.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-creating-a-dashboard&#34;&gt;3. Creating a Dashboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Design a custom dashboard in ThingsBoard.&lt;/li&gt;
&lt;li&gt;Add widgets for data visualization (gauges, charts, control buttons).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-implementing-automation&#34;&gt;4. Implementing Automation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use the ThingsBoard Rule Engine to set up alarms, triggers, and automation.&lt;/li&gt;
&lt;li&gt;Implement Python scripts for data processing and additional automation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-testing-and-deployment&#34;&gt;5. Testing and Deployment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Verify data transmission from PLC to ThingsBoard.&lt;/li&gt;
&lt;li&gt;Test remote control features and automation.&lt;/li&gt;
&lt;li&gt;Deploy the system in an industrial environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;challenges-and-solutions&#34;&gt;Challenges and Solutions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Network Latency&lt;/strong&gt;: Optimized MQTT settings for stable communication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Accuracy&lt;/strong&gt;: Implemented filtering mechanisms to reduce noise.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Used authentication and encryption for secure data transfer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This project successfully demonstrated the integration of a PLC with ThingsBoard for industrial IoT applications. The system provides real-time monitoring, automation, and remote accessibility, making it a robust solution for industrial automation needs.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
